				if(frame == 0) {
					tempbox.addCircle(Circle(27.0, 44%64, 4.527692569068709));
					tempbox.addCircle(Circle(33.0, 34%64, 8.06225774829855));
					tempbox.addCircle(Circle(37.0, 44%64, 4.031128874149275));
				}
				if(frame == 1) {
					tempbox.addCircle(Circle(31.5, 103%64, 10.111874208078342));
					tempbox.addCircle(Circle(32.0, 89%64, 6.5));
				}
				if(frame == 2) {
					tempbox.addCircle(Circle(31.5, 167%64, 9.219544457292887));
					tempbox.addCircle(Circle(32.5, 153%64, 7.158910531638177));
				}
				if(frame == 3) {
					tempbox.addCircle(Circle(31.0, 231%64, 10.51189802081432));
					tempbox.addCircle(Circle(32.5, 217%64, 7.0710678118654755));
				}
				if(frame == 4) {
					tempbox.addCircle(Circle(31.0, 296%64, 9.486832980505138));
					tempbox.addCircle(Circle(32.5, 281%64, 7.566372975210778));
				}
				if(frame == 5) {
					tempbox.addCircle(Circle(23.5, 357%64, 5.5901699437494745));
					tempbox.addCircle(Circle(33.5, 352%64, 8.514693182963201));
					tempbox.addCircle(Circle(40.0, 362%64, 5.522680508593631));
					tempbox.addCircle(Circle(40.5, 345%64, 7.0178344238090995));
				}
				if(frame == 6) {
					tempbox.addCircle(Circle(31.0, 423%64, 9.340770846134703));
					tempbox.addCircle(Circle(39.0, 411%64, 7.566372975210778));
				}
				if(frame == 7) {
					tempbox.addCircle(Circle(20.5, 485%64, 3.5));
					tempbox.addCircle(Circle(31.0, 482%64, 8.5));
					tempbox.addCircle(Circle(38.5, 490%64, 4.527692569068709));
					tempbox.addCircle(Circle(40.0, 475%64, 7.566372975210778));
				}
				if(frame == 8) {
					tempbox.addCircle(Circle(29.0, 555%64, 5.0990195135927845));
					tempbox.addCircle(Circle(31.0, 545%64, 9.12414379544733));
					tempbox.addCircle(Circle(38.5, 539%64, 7.280109889280518));
				}
				if(frame == 9) {
					tempbox.addCircle(Circle(31.0, 616%64, 9.5524865872714));
					tempbox.addCircle(Circle(32.5, 600%64, 7.516648189186454));
				}
				if(frame == 10) {
					tempbox.addCircle(Circle(30.5, 679%64, 10.111874208078342));
					tempbox.addCircle(Circle(36.0, 669%64, 8.0156097709407));
				}
				if(frame == 11) {
					tempbox.addCircle(Circle(32.0, 745%64, 10.0));
					tempbox.addCircle(Circle(32.5, 730%64, 7.5));
				}
				if(frame == 12) {
					tempbox.addCircle(Circle(32.5, 794%64, 8.0));
					tempbox.addCircle(Circle(32.5, 809%64, 9.013878188659973));
				}
				if(frame == 13) {
					tempbox.addCircle(Circle(32.5, 869%64, 10.012492197250394));
					tempbox.addCircle(Circle(33.0, 858%64, 7.5));
				}
				if(frame == 14) {
					tempbox.addCircle(Circle(31.5, 935%64, 8.631338250816034));
					tempbox.addCircle(Circle(35.0, 922%64, 8.0));
				}
				if(frame == 15) {
					tempbox.addCircle(Circle(32.0, 1000%64, 11.01135777277262));
					tempbox.addCircle(Circle(36.0, 989%64, 7.0));
				}
				if(frame == 16) {
					tempbox.addCircle(Circle(25.0, 1064%64, 5.5));
					tempbox.addCircle(Circle(33.5, 1057%64, 7.433034373659253));
					tempbox.addCircle(Circle(36.0, 1048%64, 6.519202405202649));
				}
				if(frame == 17) {
					tempbox.addCircle(Circle(24.0, 1131%64, 4.6097722286464435));
					tempbox.addCircle(Circle(30.0, 1123%64, 7.211102550927978));
					tempbox.addCircle(Circle(37.0, 1113%64, 8.0156097709407));
				}
				if(frame == 18) {
					tempbox.addCircle(Circle(23.5, 1190%64, 5.852349955359813));
					tempbox.addCircle(Circle(31.5, 1185%64, 6.5));
					tempbox.addCircle(Circle(42.0, 1183%64, 7.516648189186454));
				}
				if(frame == 19) {
					tempbox.addCircle(Circle(21.5, 1246%64, 7.566372975210778));
					tempbox.addCircle(Circle(32.5, 1247%64, 6.576473218982953));
					tempbox.addCircle(Circle(44.0, 1247%64, 7.0178344238090995));
				}
				if(frame == 20) {
					tempbox.addCircle(Circle(32.0, 1306%64, 8.558621384311845));
					tempbox.addCircle(Circle(35.0, 1321%64, 8.06225774829855));
				}
				if(frame == 21) {
					tempbox.addCircle(Circle(26.5, 1382%64, 7.566372975210778));
					tempbox.addCircle(Circle(35.0, 1374%64, 8.0156097709407));
					tempbox.addCircle(Circle(43.0, 1367%64, 5.0));
				}
				if(frame == 22) {
					tempbox.addCircle(Circle(22.5, 1440%64, 7.433034373659253));
					tempbox.addCircle(Circle(34.0, 1441%64, 7.648529270389178));
					tempbox.addCircle(Circle(44.0, 1441%64, 5.0));
				}
				if(frame == 23) {
					tempbox.addCircle(Circle(31.5, 1494%64, 7.516648189186454));
					tempbox.addCircle(Circle(34.0, 1506%64, 7.648529270389178));
					tempbox.addCircle(Circle(35.0, 1515%64, 6.082762530298219));
				}
				if(frame == 24) {
					tempbox.addCircle(Circle(31.5, 1562%64, 7.158910531638177));
					tempbox.addCircle(Circle(32.0, 1580%64, 5.0990195135927845));
					tempbox.addCircle(Circle(33.0, 1572%64, 6.082762530298219));
				}
				if(frame == 25) {
					tempbox.addCircle(Circle(29.5, 1640%64, 8.06225774829855));
					tempbox.addCircle(Circle(36.0, 1630%64, 7.566372975210778));
					tempbox.addCircle(Circle(39.0, 1644%64, 4.0));
				}
				if(frame == 26) {
					tempbox.addCircle(Circle(22.5, 1690%64, 4.743416490252569));
					tempbox.addCircle(Circle(22.5, 1706%64, 4.6097722286464435));
					tempbox.addCircle(Circle(29.0, 1698%64, 7.158910531638177));
					tempbox.addCircle(Circle(39.5, 1698%64, 6.5));
				}
				if(frame == 27) {
					tempbox.addCircle(Circle(22.5, 1762%64, 5.0990195135927845));
					tempbox.addCircle(Circle(32.5, 1752%64, 5.0990195135927845));
					tempbox.addCircle(Circle(32.5, 1763%64, 7.5));
					tempbox.addCircle(Circle(40.0, 1771%64, 6.800735254367722));
				}
				if(frame == 28) {
					tempbox.addCircle(Circle(24.5, 1834%64, 6.800735254367722));
					tempbox.addCircle(Circle(32.0, 1826%64, 7.516648189186454));
					tempbox.addCircle(Circle(32.5, 1815%64, 4.924428900898052));
					tempbox.addCircle(Circle(42.0, 1826%64, 5.024937810560445));
				}
				if(frame == 29) {
					tempbox.addCircle(Circle(26.0, 1890%64, 7.0710678118654755));
					tempbox.addCircle(Circle(36.5, 1891%64, 8.0156097709407));
					tempbox.addCircle(Circle(42.5, 1898%64, 5.220153254455275));
					tempbox.addCircle(Circle(43.0, 1882%64, 5.385164807134504));
				}
				if(frame == 30) {
					tempbox.addCircle(Circle(26.0, 1965%64, 4.0));
					tempbox.addCircle(Circle(30.0, 1950%64, 7.615773105863909));
					tempbox.addCircle(Circle(35.5, 1961%64, 8.54400374531753));
				}
				if(frame == 31) {
					tempbox.addCircle(Circle(28.0, 2028%64, 4.5));
					tempbox.addCircle(Circle(34.0, 2020%64, 7.280109889280518));
					tempbox.addCircle(Circle(35.5, 2012%64, 7.0));
					tempbox.addCircle(Circle(36.0, 2021%64, 0.0));
					tempbox.addCircle(Circle(41.0, 2028%64, 4.6097722286464435));
				}
				if(frame == 32) {
					tempbox.addCircle(Circle(27.5, 2091%64, 5.0990195135927845));
					tempbox.addCircle(Circle(33.5, 2085%64, 4.924428900898052));
					tempbox.addCircle(Circle(36.0, 2077%64, 7.566372975210778));
					tempbox.addCircle(Circle(40.5, 2090%64, 6.0));
				}
				if(frame == 33) {
					tempbox.addCircle(Circle(29.0, 2153%64, 7.905694150420948));
					tempbox.addCircle(Circle(36.0, 2141%64, 7.905694150420948));
					tempbox.addCircle(Circle(38.5, 2154%64, 6.020797289396148));
				}
				if(frame == 34) {
					tempbox.addCircle(Circle(28.5, 2219%64, 5.0));
					tempbox.addCircle(Circle(34.0, 2213%64, 5.522680508593631));
					tempbox.addCircle(Circle(36.0, 2205%64, 7.648529270389178));
					tempbox.addCircle(Circle(41.5, 2219%64, 5.852349955359813));
				}
				if(frame == 35) {
					tempbox.addCircle(Circle(28.0, 2284%64, 5.0));
					tempbox.addCircle(Circle(34.0, 2277%64, 5.852349955359813));
					tempbox.addCircle(Circle(36.0, 2268%64, 7.5));
					tempbox.addCircle(Circle(40.5, 2284%64, 4.716990566028302));
				}
				if(frame == 36) {
					tempbox.addCircle(Circle(27.0, 2347%64, 4.527692569068709));
					tempbox.addCircle(Circle(34.0, 2342%64, 6.519202405202649));
					tempbox.addCircle(Circle(38.0, 2332%64, 8.514693182963201));
					tempbox.addCircle(Circle(39.5, 2348%64, 5.0990195135927845));
				}
				if(frame == 37) {
					tempbox.addCircle(Circle(26.0, 2409%64, 5.024937810560445));
					tempbox.addCircle(Circle(32.5, 2405%64, 4.716990566028302));
					tempbox.addCircle(Circle(41.5, 2403%64, 7.158910531638177));
					tempbox.addCircle(Circle(46.0, 2412%64, 4.6097722286464435));
					tempbox.addCircle(Circle(48.0, 2398%64, 7.5));
				}
				if(frame == 38) {
					tempbox.addCircle(Circle(28.0, 2475%64, 5.220153254455275));
					tempbox.addCircle(Circle(34.0, 2470%64, 4.031128874149275));
					tempbox.addCircle(Circle(43.0, 2467%64, 6.576473218982953));
					tempbox.addCircle(Circle(48.0, 2477%64, 5.024937810560445));
					tempbox.addCircle(Circle(50.5, 2462%64, 7.648529270389178));
				}
				if(frame == 39) {
					tempbox.addCircle(Circle(27.0, 2540%64, 4.031128874149275));
					tempbox.addCircle(Circle(33.5, 2534%64, 6.519202405202649));
					tempbox.addCircle(Circle(34.5, 2524%64, 8.246211251235321));
					tempbox.addCircle(Circle(39.0, 2540%64, 4.5));
				}
				if(frame == 40) {
					tempbox.addCircle(Circle(27.5, 2603%64, 4.949747468305833));
					tempbox.addCircle(Circle(32.5, 2596%64, 7.5));
					tempbox.addCircle(Circle(34.0, 2588%64, 7.648529270389178));
					tempbox.addCircle(Circle(39.5, 2605%64, 4.527692569068709));
				}
				if(frame == 41) {
					tempbox.addCircle(Circle(33.5, 2664%64, 9.5));
					tempbox.addCircle(Circle(43.5, 2654%64, 8.077747210701755));
				}
				if(frame == 42) {
					tempbox.addCircle(Circle(25.5, 2733%64, 4.527692569068709));
					tempbox.addCircle(Circle(33.5, 2725%64, 9.848857801796104));
					tempbox.addCircle(Circle(34.0, 2715%64, 7.648529270389178));
					tempbox.addCircle(Circle(41.5, 2733%64, 5.5901699437494745));
				}
				if(frame == 43) {
					tempbox.addCircle(Circle(23.5, 2798%64, 4.031128874149275));
					tempbox.addCircle(Circle(31.5, 2779%64, 8.06225774829855));
					tempbox.addCircle(Circle(32.0, 2790%64, 9.5524865872714));
				}
				if(frame == 44) {
					tempbox.addCircle(Circle(28.5, 2855%64, 8.631338250816034));
					tempbox.addCircle(Circle(32.5, 2842%64, 7.158910531638177));
					tempbox.addCircle(Circle(38.0, 2855%64, 5.024937810560445));
					tempbox.addCircle(Circle(48.5, 2856%64, 7.810249675906654));
				}
				if(frame == 45) {
					tempbox.addCircle(Circle(24.5, 2926%64, 3.5355339059327378));
					tempbox.addCircle(Circle(32.0, 2917%64, 9.013878188659973));
					tempbox.addCircle(Circle(32.5, 2906%64, 7.566372975210778));
					tempbox.addCircle(Circle(40.5, 2923%64, 4.031128874149275));
				}
				if(frame == 46) {
					tempbox.addCircle(Circle(29.0, 2970%64, 8.514693182963201));
					tempbox.addCircle(Circle(29.5, 2981%64, 7.762087348130012));
					tempbox.addCircle(Circle(30.0, 2989%64, 4.6097722286464435));
				}
				if(frame == 47) {
					tempbox.addCircle(Circle(26.0, 3052%64, 4.0));
					tempbox.addCircle(Circle(32.0, 3043%64, 9.513148795220223));
					tempbox.addCircle(Circle(32.5, 3033%64, 8.0));
					tempbox.addCircle(Circle(37.0, 3052%64, 5.1478150704935));
				}
				if(frame == 48) {
					tempbox.addCircle(Circle(33.0, 3110%64, 9.192388155425117));
					tempbox.addCircle(Circle(34.0, 3098%64, 8.381527307120106));
				}
				if(frame == 49) {
					tempbox.addCircle(Circle(26.5, 3180%64, 4.924428900898052));
					tempbox.addCircle(Circle(29.5, 3171%64, 7.158910531638177));
					tempbox.addCircle(Circle(30.0, 3161%64, 7.516648189186454));
					tempbox.addCircle(Circle(38.5, 3175%64, 4.527692569068709));
				}
				if(frame == 50) {
					tempbox.addCircle(Circle(27.0, 3244%64, 5.220153254455275));
					tempbox.addCircle(Circle(28.5, 3225%64, 8.139410298049853));
					tempbox.addCircle(Circle(33.0, 3234%64, 8.5));
					tempbox.addCircle(Circle(45.0, 3236%64, 5.408326913195984));
					tempbox.addCircle(Circle(52.0, 3236%64, 4.716990566028302));
				}
				if(frame == 51) {
					tempbox.addCircle(Circle(25.5, 3309%64, 4.272001872658765));
					tempbox.addCircle(Circle(30.5, 3299%64, 9.013878188659973));
					tempbox.addCircle(Circle(31.0, 3289%64, 8.0156097709407));
					tempbox.addCircle(Circle(37.0, 3308%64, 3.5355339059327378));
				}
				if(frame == 52) {
					tempbox.addCircle(Circle(27.0, 3371%64, 5.0990195135927845));
					tempbox.addCircle(Circle(33.0, 3362%64, 9.12414379544733));
					tempbox.addCircle(Circle(36.5, 3372%64, 4.527692569068709));
				}
				if(frame == 53) {
					tempbox.addCircle(Circle(37.5, 3417%64, 8.0));
					tempbox.addCircle(Circle(38.0, 3430%64, 7.5));
				}
				if(frame == 54) {
					tempbox.addCircle(Circle(32.0, 3484%64, 7.905694150420948));
					tempbox.addCircle(Circle(34.0, 3497%64, 6.576473218982953));
					tempbox.addCircle(Circle(43.5, 3489%64, 7.211102550927978));
					tempbox.addCircle(Circle(54.5, 3493%64, 5.522680508593631));
				}
				if(frame == 55) {
					tempbox.addCircle(Circle(20.5, 3565%64, 4.6097722286464435));
					tempbox.addCircle(Circle(23.5, 3547%64, 8.381527307120106));
					tempbox.addCircle(Circle(26.5, 3559%64, 7.0));
					tempbox.addCircle(Circle(34.0, 3564%64, 4.743416490252569));
				}
				if(frame == 56) {
					tempbox.addCircle(Circle(32.0, 3612%64, 8.0));
					tempbox.addCircle(Circle(32.5, 3624%64, 8.514693182963201));
				}
				if(frame == 57) {
					tempbox.addCircle(Circle(31.5, 3686%64, 9.513148795220223));
					tempbox.addCircle(Circle(33.0, 3674%64, 8.139410298049853));
				}
				if(frame == 58) {
					tempbox.addCircle(Circle(27.0, 3758%64, 4.242640687119285));
					tempbox.addCircle(Circle(33.0, 3751%64, 7.433034373659253));
					tempbox.addCircle(Circle(38.0, 3757%64, 4.123105625617661));
					tempbox.addCircle(Circle(38.5, 3742%64, 7.810249675906654));
				}
				if(frame == 59) {
					tempbox.addCircle(Circle(38.0, 3821%64, 4.47213595499958));
					tempbox.addCircle(Circle(43.5, 3813%64, 8.631338250816034));
					tempbox.addCircle(Circle(45.5, 3800%64, 8.558621384311845));
					tempbox.addCircle(Circle(49.0, 3822%64, 4.031128874149275));
				}
				if(frame == 60) {
					tempbox.addCircle(Circle(37.5, 3884%64, 4.123105625617661));
					tempbox.addCircle(Circle(40.5, 3873%64, 8.246211251235321));
					tempbox.addCircle(Circle(41.5, 3862%64, 8.0156097709407));
					tempbox.addCircle(Circle(47.5, 3880%64, 5.0));
					tempbox.addCircle(Circle(51.0, 3859%64, 4.5));
					tempbox.addCircle(Circle(53.0, 3851%64, 5.5901699437494745));
				}
				if(frame == 61) {
					tempbox.addCircle(Circle(35.0, 3926%64, 8.631338250816034));
					tempbox.addCircle(Circle(37.0, 3949%64, 5.0));
					tempbox.addCircle(Circle(39.0, 3939%64, 8.631338250816034));
				}
				if(frame == 62) {
					tempbox.addCircle(Circle(24.5, 4013%64, 4.0));
					tempbox.addCircle(Circle(32.0, 4007%64, 8.54400374531753));
					tempbox.addCircle(Circle(36.5, 3997%64, 8.5));
					tempbox.addCircle(Circle(37.0, 4014%64, 3.8078865529319543));
				}
				if(frame == 63) {
					tempbox.addCircle(Circle(23.5, 4058%64, 7.566372975210778));
					tempbox.addCircle(Circle(26.5, 4076%64, 4.031128874149275));
					tempbox.addCircle(Circle(27.5, 4068%64, 7.566372975210778));
					tempbox.addCircle(Circle(36.0, 4072%64, 5.0));
				}
				if(frame == 64) {
					tempbox.addCircle(Circle(27.0, 4128%64, 7.516648189186454));
					tempbox.addCircle(Circle(36.0, 4137%64, 7.905694150420948));
					tempbox.addCircle(Circle(44.0, 4139%64, 4.031128874149275));
				}
				if(frame == 65) {
					tempbox.addCircle(Circle(31.5, 4197%64, 7.648529270389178));
					tempbox.addCircle(Circle(33.0, 4205%64, 4.0));
					tempbox.addCircle(Circle(35.0, 4187%64, 8.0));
				}
				if(frame == 66) {
					tempbox.addCircle(Circle(24.0, 4251%64, 8.32165848854662));
					tempbox.addCircle(Circle(28.5, 4262%64, 7.762087348130012));
					tempbox.addCircle(Circle(39.5, 4263%64, 5.656854249492381));
				}
				if(frame == 67) {
					tempbox.addCircle(Circle(31.5, 4333%64, 5.024937810560445));
					tempbox.addCircle(Circle(32.5, 4323%64, 7.810249675906654));
					tempbox.addCircle(Circle(35.0, 4313%64, 6.708203932499369));
				}
				if(frame == 68) {
					tempbox.addCircle(Circle(21.5, 4388%64, 8.5));
					tempbox.addCircle(Circle(36.5, 4392%64, 7.905694150420948));
					tempbox.addCircle(Circle(46.5, 4391%64, 4.716990566028302));
				}
				if(frame == 69) {
					tempbox.addCircle(Circle(30.5, 4453%64, 7.826237921249264));
					tempbox.addCircle(Circle(35.5, 4440%64, 8.558621384311845));
					tempbox.addCircle(Circle(39.5, 4429%64, 6.576473218982953));
				}
				if(frame == 70) {
					tempbox.addCircle(Circle(22.0, 4514%64, 4.949747468305833));
					tempbox.addCircle(Circle(28.0, 4524%64, 5.522680508593631));
					tempbox.addCircle(Circle(32.0, 4513%64, 7.905694150420948));
					tempbox.addCircle(Circle(41.0, 4508%64, 7.5));
				}
				if(frame == 71) {
					tempbox.addCircle(Circle(31.5, 4588%64, 5.0));
					tempbox.addCircle(Circle(32.5, 4579%64, 7.648529270389178));
					tempbox.addCircle(Circle(35.5, 4570%64, 7.905694150420948));
				}
				if(frame == 72) {
					tempbox.addCircle(Circle(24.5, 4651%64, 5.0));
					tempbox.addCircle(Circle(27.5, 4643%64, 8.381527307120106));
					tempbox.addCircle(Circle(36.0, 4635%64, 8.381527307120106));
				}
				if(frame == 73) {
					tempbox.addCircle(Circle(17.5, 4709%64, 7.7781745930520225));
					tempbox.addCircle(Circle(29.5, 4707%64, 9.192388155425117));
					tempbox.addCircle(Circle(36.0, 4700%64, 7.516648189186454));
				}
				if(frame == 74) {
					tempbox.addCircle(Circle(25.5, 4778%64, 6.519202405202649));
					tempbox.addCircle(Circle(30.5, 4768%64, 8.845903006477066));
					tempbox.addCircle(Circle(36.5, 4760%64, 8.0));
				}
				if(frame == 75) {
					tempbox.addCircle(Circle(31.5, 4845%64, 6.082762530298219));
					tempbox.addCircle(Circle(32.0, 4837%64, 7.0178344238090995));
					tempbox.addCircle(Circle(34.5, 4827%64, 8.5));
				}
				if(frame == 76) {
					tempbox.addCircle(Circle(29.5, 4889%64, 7.516648189186454));
					tempbox.addCircle(Circle(30.5, 4908%64, 4.527692569068709));
					tempbox.addCircle(Circle(33.5, 4897%64, 9.219544457292887));
					tempbox.addCircle(Circle(41.5, 4904%64, 5.0));
				}
				if(frame == 77) {
					tempbox.addCircle(Circle(30.0, 4953%64, 8.139410298049853));
					tempbox.addCircle(Circle(30.5, 4972%64, 4.5));
					tempbox.addCircle(Circle(34.0, 4962%64, 8.558621384311845));
					tempbox.addCircle(Circle(42.0, 4968%64, 3.5355339059327378));
				}
				if(frame == 78) {
					tempbox.addCircle(Circle(22.5, 5026%64, 4.6097722286464435));
					tempbox.addCircle(Circle(30.0, 5034%64, 6.020797289396148));
					tempbox.addCircle(Circle(32.5, 5025%64, 8.139410298049853));
					tempbox.addCircle(Circle(40.5, 5019%64, 8.0156097709407));
				}
				if(frame == 79) {
					tempbox.addCircle(Circle(30.0, 5095%64, 7.0710678118654755));
					tempbox.addCircle(Circle(34.0, 5085%64, 8.0156097709407));
					tempbox.addCircle(Circle(44.0, 5081%64, 8.860022573334675));
				}
				if(frame == 80) {
					tempbox.addCircle(Circle(30.5, 5148%64, 6.041522986797286));
					tempbox.addCircle(Circle(31.5, 5157%64, 5.220153254455275));
					tempbox.addCircle(Circle(41.0, 5151%64, 8.54400374531753));
					tempbox.addCircle(Circle(51.5, 5152%64, 8.139410298049853));
				}
				if(frame == 81) {
					tempbox.addCircle(Circle(38.0, 5223%64, 7.566372975210778));
					tempbox.addCircle(Circle(43.0, 5203%64, 4.301162633521313));
					tempbox.addCircle(Circle(45.5, 5214%64, 8.845903006477066));
					tempbox.addCircle(Circle(52.0, 5205%64, 4.949747468305833));
				}
				if(frame == 82) {
					tempbox.addCircle(Circle(29.0, 5273%64, 8.0));
					tempbox.addCircle(Circle(31.5, 5292%64, 5.0990195135927845));
					tempbox.addCircle(Circle(33.5, 5284%64, 6.576473218982953));
					tempbox.addCircle(Circle(43.0, 5287%64, 5.70087712549569));
				}
				if(frame == 83) {
					tempbox.addCircle(Circle(32.0, 5346%64, 8.73212459828649));
					tempbox.addCircle(Circle(32.0, 5356%64, 5.852349955359813));
					tempbox.addCircle(Circle(35.5, 5338%64, 7.7781745930520225));
				}
				if(frame == 84) {
					tempbox.addCircle(Circle(31.5, 5421%64, 5.024937810560445));
					tempbox.addCircle(Circle(32.0, 5412%64, 7.566372975210778));
					tempbox.addCircle(Circle(33.0, 5401%64, 8.514693182963201));
				}
				if(frame == 85) {
					tempbox.addCircle(Circle(30.0, 5485%64, 4.527692569068709));
					tempbox.addCircle(Circle(31.0, 5475%64, 7.566372975210778));
					tempbox.addCircle(Circle(33.5, 5464%64, 7.762087348130012));
				}
				if(frame == 86) {
					tempbox.addCircle(Circle(28.0, 5529%64, 8.06225774829855));
					tempbox.addCircle(Circle(29.5, 5538%64, 7.566372975210778));
					tempbox.addCircle(Circle(29.5, 5547%64, 5.0));
				}
				if(frame == 87) {
					tempbox.addCircle(Circle(28.5, 5590%64, 7.516648189186454));
					tempbox.addCircle(Circle(30.0, 5602%64, 8.06225774829855));
					tempbox.addCircle(Circle(31.5, 5612%64, 6.18465843842649));
				}
				if(frame == 88) {
					tempbox.addCircle(Circle(29.5, 5658%64, 7.516648189186454));
					tempbox.addCircle(Circle(31.0, 5668%64, 7.5));
					tempbox.addCircle(Circle(35.0, 5676%64, 5.0990195135927845));
				}
				if(frame == 89) {
					tempbox.addCircle(Circle(28.5, 5721%64, 8.077747210701755));
					tempbox.addCircle(Circle(28.5, 5740%64, 4.924428900898052));
					tempbox.addCircle(Circle(30.0, 5731%64, 7.5));
					tempbox.addCircle(Circle(35.5, 5740%64, 4.123105625617661));
				}
				if(frame == 90) {
					tempbox.addCircle(Circle(28.5, 5784%64, 7.648529270389178));
					tempbox.addCircle(Circle(29.5, 5794%64, 7.5));
					tempbox.addCircle(Circle(30.0, 5804%64, 4.5));
				}
				if(frame == 91) {
					tempbox.addCircle(Circle(28.0, 5848%64, 8.0));
					tempbox.addCircle(Circle(29.0, 5847%64, 0.0));
					tempbox.addCircle(Circle(30.5, 5860%64, 8.0156097709407));
					tempbox.addCircle(Circle(32.0, 5868%64, 6.020797289396148));
				}
				if(frame == 92) {
					tempbox.addCircle(Circle(29.0, 5912%64, 7.566372975210778));
					tempbox.addCircle(Circle(31.0, 5923%64, 7.516648189186454));
					tempbox.addCircle(Circle(35.0, 5932%64, 4.743416490252569));
				}
				if(frame == 93) {
					tempbox.addCircle(Circle(27.5, 5976%64, 8.0));
					tempbox.addCircle(Circle(30.0, 5988%64, 6.670832032063167));
					tempbox.addCircle(Circle(32.0, 5995%64, 6.18465843842649));
				}
				if(frame == 94) {
					tempbox.addCircle(Circle(27.0, 6059%64, 5.220153254455275));
					tempbox.addCircle(Circle(32.0, 6051%64, 7.3824115301167));
					tempbox.addCircle(Circle(34.0, 6041%64, 8.246211251235321));
					tempbox.addCircle(Circle(38.0, 6059%64, 5.0));
				}
				if(frame == 95) {
					tempbox.addCircle(Circle(26.0, 6124%64, 4.527692569068709));
					tempbox.addCircle(Circle(30.5, 6115%64, 8.558621384311845));
					tempbox.addCircle(Circle(33.5, 6105%64, 7.5));
					tempbox.addCircle(Circle(38.5, 6124%64, 4.743416490252569));
				}
				if(frame == 96) {
					tempbox.addCircle(Circle(27.0, 6189%64, 4.527692569068709));
					tempbox.addCircle(Circle(31.0, 6180%64, 8.139410298049853));
					tempbox.addCircle(Circle(33.0, 6170%64, 8.0));
					tempbox.addCircle(Circle(39.0, 6188%64, 5.385164807134504));
				}
				if(frame == 97) {
					tempbox.addCircle(Circle(26.5, 6252%64, 4.5));
					tempbox.addCircle(Circle(32.0, 6243%64, 8.077747210701755));
					tempbox.addCircle(Circle(33.0, 6233%64, 8.5));
					tempbox.addCircle(Circle(38.0, 6252%64, 5.220153254455275));
				}
				if(frame == 98) {
					tempbox.addCircle(Circle(26.5, 6316%64, 5.0));
					tempbox.addCircle(Circle(31.5, 6307%64, 8.200609733428363));
					tempbox.addCircle(Circle(34.0, 6298%64, 8.0156097709407));
					tempbox.addCircle(Circle(38.5, 6316%64, 4.527692569068709));
				}
				if(frame == 99) {
					tempbox.addCircle(Circle(27.5, 6380%64, 5.315072906367325));
					tempbox.addCircle(Circle(35.0, 6370%64, 8.602325267042627));
					tempbox.addCircle(Circle(37.5, 6360%64, 7.566372975210778));
					tempbox.addCircle(Circle(40.5, 6380%64, 4.924428900898052));
				}
				if(frame == 100) {
					tempbox.addCircle(Circle(26.0, 6445%64, 4.743416490252569));
					tempbox.addCircle(Circle(33.0, 6436%64, 8.74642784226795));
					tempbox.addCircle(Circle(38.5, 6445%64, 5.024937810560445));
					tempbox.addCircle(Circle(41.5, 6429%64, 8.139410298049853));
				}
				if(frame == 101) {
					tempbox.addCircle(Circle(25.0, 6509%64, 4.527692569068709));
					tempbox.addCircle(Circle(30.0, 6489%64, 8.246211251235321));
					tempbox.addCircle(Circle(31.0, 6500%64, 8.06225774829855));
					tempbox.addCircle(Circle(37.5, 6508%64, 5.024937810560445));
				}
				if(frame == 102) {
					tempbox.addCircle(Circle(23.5, 6556%64, 7.516648189186454));
					tempbox.addCircle(Circle(29.5, 6567%64, 9.5524865872714));
				}
				if(frame == 103) {
					tempbox.addCircle(Circle(23.0, 6620%64, 7.516648189186454));
					tempbox.addCircle(Circle(29.0, 6631%64, 9.055385138137417));
				}
				if(frame == 104) {
					tempbox.addCircle(Circle(23.0, 6684%64, 7.566372975210778));
					tempbox.addCircle(Circle(29.5, 6695%64, 9.013878188659973));
				}
				if(frame == 105) {
					tempbox.addCircle(Circle(23.0, 6749%64, 8.0156097709407));
					tempbox.addCircle(Circle(29.5, 6760%64, 9.86154146165801));
				}
				if(frame == 106) {
					tempbox.addCircle(Circle(23.0, 6812%64, 8.0));
					tempbox.addCircle(Circle(29.5, 6823%64, 9.899494936611665));
				}
				if(frame == 107) {
					tempbox.addCircle(Circle(20.5, 6872%64, 8.0));
					tempbox.addCircle(Circle(25.5, 6884%64, 6.670832032063167));
					tempbox.addCircle(Circle(27.5, 6892%64, 4.527692569068709));
				}
				if(frame == 108) {
					tempbox.addCircle(Circle(26.0, 6956%64, 5.0990195135927845));
					tempbox.addCircle(Circle(35.0, 6949%64, 7.905694150420948));
					tempbox.addCircle(Circle(41.5, 6956%64, 4.5));
					tempbox.addCircle(Circle(45.0, 6943%64, 7.5));
				}
				if(frame == 109) {
					tempbox.addCircle(Circle(27.5, 7020%64, 4.924428900898052));
					tempbox.addCircle(Circle(36.5, 7014%64, 7.158910531638177));
					tempbox.addCircle(Circle(40.5, 7022%64, 4.0));
					tempbox.addCircle(Circle(44.5, 7008%64, 7.648529270389178));
				}
				if(frame == 110) {
					tempbox.addCircle(Circle(26.0, 7085%64, 4.527692569068709));
					tempbox.addCircle(Circle(31.5, 7076%64, 7.0710678118654755));
					tempbox.addCircle(Circle(34.5, 7068%64, 7.566372975210778));
					tempbox.addCircle(Circle(36.5, 7084%64, 4.527692569068709));
				}
				if(frame == 111) {
					tempbox.addCircle(Circle(26.0, 7149%64, 4.0));
					tempbox.addCircle(Circle(31.0, 7142%64, 8.0156097709407));
					tempbox.addCircle(Circle(37.0, 7134%64, 8.0156097709407));
					tempbox.addCircle(Circle(38.5, 7147%64, 6.0));
				}
				if(frame == 112) {
					tempbox.addCircle(Circle(26.0, 7214%64, 3.5355339059327378));
					tempbox.addCircle(Circle(31.5, 7206%64, 8.139410298049853));
					tempbox.addCircle(Circle(37.5, 7198%64, 7.516648189186454));
					tempbox.addCircle(Circle(39.0, 7211%64, 6.519202405202649));
				}
				if(frame == 113) {
					tempbox.addCircle(Circle(25.5, 7277%64, 4.123105625617661));
					tempbox.addCircle(Circle(32.5, 7269%64, 8.602325267042627));
					tempbox.addCircle(Circle(37.0, 7262%64, 8.0));
					tempbox.addCircle(Circle(39.5, 7276%64, 6.576473218982953));
				}
				if(frame == 114) {
					tempbox.addCircle(Circle(26.0, 7341%64, 4.031128874149275));
					tempbox.addCircle(Circle(32.0, 7333%64, 8.73212459828649));
					tempbox.addCircle(Circle(37.5, 7325%64, 8.06225774829855));
					tempbox.addCircle(Circle(38.5, 7339%64, 6.020797289396148));
				}
				if(frame == 115) {
					tempbox.addCircle(Circle(26.5, 7405%64, 4.6097722286464435));
					tempbox.addCircle(Circle(31.5, 7397%64, 8.54400374531753));
					tempbox.addCircle(Circle(37.5, 7390%64, 8.06225774829855));
					tempbox.addCircle(Circle(40.5, 7403%64, 6.4031242374328485));
				}
				if(frame == 116) {
					tempbox.addCircle(Circle(35.0, 7454%64, 7.0));
					tempbox.addCircle(Circle(40.0, 7464%64, 6.5));
					tempbox.addCircle(Circle(49.5, 7459%64, 7.0710678118654755));
				}
				if(frame == 117) {
					tempbox.addCircle(Circle(40.0, 7519%64, 7.615773105863909));
					tempbox.addCircle(Circle(40.0, 7529%64, 6.670832032063167));
					tempbox.addCircle(Circle(49.5, 7527%64, 5.522680508593631));
				}
				if(frame == 118) {
					tempbox.addCircle(Circle(25.0, 7589%64, 7.632168761236874));
					tempbox.addCircle(Circle(33.0, 7592%64, 7.0178344238090995));
					tempbox.addCircle(Circle(34.0, 7583%64, 8.5));
				}
				if(frame == 119) {
					tempbox.addCircle(Circle(26.0, 7655%64, 7.280109889280518));
					tempbox.addCircle(Circle(31.0, 7646%64, 7.516648189186454));
					tempbox.addCircle(Circle(35.0, 7655%64, 7.762087348130012));
				}
				if(frame == 120) {
					tempbox.addCircle(Circle(28.5, 7722%64, 7.211102550927978));
					tempbox.addCircle(Circle(36.5, 7710%64, 8.276472678623424));
					tempbox.addCircle(Circle(37.5, 7722%64, 6.519202405202649));
				}
				if(frame == 121) {
					tempbox.addCircle(Circle(12.5, 7769%64, 7.0178344238090995));
					tempbox.addCircle(Circle(22.0, 7776%64, 6.670832032063167));
					tempbox.addCircle(Circle(24.5, 7785%64, 5.5901699437494745));
				}
				if(frame == 122) {
					tempbox.addCircle(Circle(8.5, 7847%64, 8.06225774829855));
					tempbox.addCircle(Circle(19.0, 7845%64, 6.800735254367722));
					tempbox.addCircle(Circle(27.5, 7850%64, 5.024937810560445));
				}
				if(frame == 123) {
					tempbox.addCircle(Circle(10.0, 7913%64, 7.106335201775948));
					tempbox.addCircle(Circle(18.0, 7905%64, 7.433034373659253));
					tempbox.addCircle(Circle(27.0, 7901%64, 4.527692569068709));
				}
				if(frame == 124) {
					tempbox.addCircle(Circle(13.5, 7966%64, 6.519202405202649));
					tempbox.addCircle(Circle(16.0, 7977%64, 7.516648189186454));
					tempbox.addCircle(Circle(19.5, 7957%64, 5.70087712549569));
				}
				if(frame == 125) {
					tempbox.addCircle(Circle(9.0, 8024%64, 5.5));
					tempbox.addCircle(Circle(11.0, 8034%64, 6.800735254367722));
					tempbox.addCircle(Circle(20.5, 8041%64, 7.566372975210778));
				}
				if(frame == 126) {
					tempbox.addCircle(Circle(8.0, 8100%64, 5.1478150704935));
					tempbox.addCircle(Circle(16.0, 8105%64, 6.670832032063167));
					tempbox.addCircle(Circle(25.5, 8103%64, 8.139410298049853));
				}
				if(frame == 127) {
					tempbox.addCircle(Circle(7.0, 8171%64, 4.743416490252569));
					tempbox.addCircle(Circle(16.0, 8169%64, 6.576473218982953));
					tempbox.addCircle(Circle(24.0, 8161%64, 7.905694150420948));
				}
				if(frame == 128) {
					tempbox.addCircle(Circle(26.0, 8235%64, 4.6097722286464435));
					tempbox.addCircle(Circle(31.0, 8226%64, 8.06225774829855));
					tempbox.addCircle(Circle(31.5, 8215%64, 7.566372975210778));
					tempbox.addCircle(Circle(34.5, 8234%64, 5.385164807134504));
				}
				if(frame == 129) {
					tempbox.addCircle(Circle(28.5, 8293%64, 8.845903006477066));
					tempbox.addCircle(Circle(35.5, 8290%64, 7.106335201775948));
					tempbox.addCircle(Circle(43.5, 8282%64, 8.139410298049853));
				}
				if(frame == 130) {
					tempbox.addCircle(Circle(23.0, 8354%64, 4.527692569068709));
					tempbox.addCircle(Circle(26.5, 8363%64, 4.527692569068709));
					tempbox.addCircle(Circle(34.5, 8355%64, 8.0156097709407));
					tempbox.addCircle(Circle(43.0, 8348%64, 8.73212459828649));
				}
				if(frame == 131) {
					tempbox.addCircle(Circle(29.5, 8428%64, 6.670832032063167));
					tempbox.addCircle(Circle(30.5, 8418%64, 8.631338250816034));
					tempbox.addCircle(Circle(31.0, 8408%64, 8.0156097709407));
				}
				if(frame == 132) {
					tempbox.addCircle(Circle(25.5, 8492%64, 5.5901699437494745));
					tempbox.addCircle(Circle(30.5, 8482%64, 8.276472678623424));
					tempbox.addCircle(Circle(33.0, 8473%64, 8.246211251235321));
					tempbox.addCircle(Circle(38.5, 8492%64, 5.024937810560445));
				}
				if(frame == 133) {
					tempbox.addCircle(Circle(26.5, 8556%64, 4.743416490252569));
					tempbox.addCircle(Circle(30.0, 8538%64, 8.139410298049853));
					tempbox.addCircle(Circle(30.5, 8547%64, 7.762087348130012));
					tempbox.addCircle(Circle(38.0, 8556%64, 5.0990195135927845));
				}
				if(frame == 134) {
					tempbox.addCircle(Circle(25.0, 8619%64, 5.408326913195984));
					tempbox.addCircle(Circle(31.5, 8610%64, 8.0156097709407));
					tempbox.addCircle(Circle(34.5, 8601%64, 7.280109889280518));
					tempbox.addCircle(Circle(37.0, 8619%64, 5.024937810560445));
				}
				if(frame == 135) {
					tempbox.addCircle(Circle(24.0, 8684%64, 4.924428900898052));
					tempbox.addCircle(Circle(32.0, 8675%64, 8.73212459828649));
					tempbox.addCircle(Circle(35.5, 8666%64, 7.905694150420948));
					tempbox.addCircle(Circle(38.0, 8683%64, 4.6097722286464435));
				}
				if(frame == 136) {
					tempbox.addCircle(Circle(21.5, 8748%64, 5.70087712549569));
					tempbox.addCircle(Circle(28.0, 8738%64, 8.0156097709407));
					tempbox.addCircle(Circle(31.0, 8730%64, 7.566372975210778));
					tempbox.addCircle(Circle(35.5, 8748%64, 4.743416490252569));
				}
				if(frame == 137) {
					tempbox.addCircle(Circle(20.5, 8812%64, 4.527692569068709));
					tempbox.addCircle(Circle(28.5, 8807%64, 8.077747210701755));
					tempbox.addCircle(Circle(32.5, 8798%64, 7.5));
					tempbox.addCircle(Circle(35.0, 8814%64, 4.527692569068709));
				}
				if(frame == 138) {
					tempbox.addCircle(Circle(20.0, 8874%64, 5.5901699437494745));
					tempbox.addCircle(Circle(27.0, 8866%64, 8.139410298049853));
					tempbox.addCircle(Circle(29.5, 8856%64, 9.0));
					tempbox.addCircle(Circle(34.0, 8873%64, 5.220153254455275));
				}
				if(frame == 139) {
					tempbox.addCircle(Circle(25.0, 8939%64, 6.0));
					tempbox.addCircle(Circle(26.5, 8930%64, 8.631338250816034));
					tempbox.addCircle(Circle(27.0, 8919%64, 9.0));
				}
				if(frame == 140) {
					tempbox.addCircle(Circle(25.0, 9001%64, 5.5901699437494745));
					tempbox.addCircle(Circle(26.5, 8983%64, 8.631338250816034));
					tempbox.addCircle(Circle(31.0, 8992%64, 8.558621384311845));
					tempbox.addCircle(Circle(37.5, 9002%64, 5.0990195135927845));
				}
				if(frame == 141) {
					tempbox.addCircle(Circle(21.0, 9067%64, 4.6097722286464435));
					tempbox.addCircle(Circle(27.5, 9060%64, 7.516648189186454));
					tempbox.addCircle(Circle(28.5, 9052%64, 8.246211251235321));
					tempbox.addCircle(Circle(35.0, 9066%64, 5.0990195135927845));
				}
				if(frame == 142) {
					tempbox.addCircle(Circle(20.5, 9127%64, 7.0710678118654755));
					tempbox.addCircle(Circle(30.5, 9129%64, 7.762087348130012));
				}
				if(frame == 143) {
					tempbox.addCircle(Circle(25.0, 9181%64, 8.0));
					tempbox.addCircle(Circle(30.0, 9191%64, 11.40175425099138));
				}
				if(frame == 144) {
					tempbox.addCircle(Circle(26.5, 9239%64, 8.5));
					tempbox.addCircle(Circle(27.0, 9250%64, 8.5));
					tempbox.addCircle(Circle(29.0, 9260%64, 5.5));
				}
				if(frame == 145) {
					tempbox.addCircle(Circle(25.5, 9304%64, 8.06225774829855));
					tempbox.addCircle(Circle(26.0, 9314%64, 8.0));
					tempbox.addCircle(Circle(27.5, 9323%64, 5.522680508593631));
				}
				if(frame == 146) {
					tempbox.addCircle(Circle(29.0, 9387%64, 6.020797289396148));
					tempbox.addCircle(Circle(33.0, 9379%64, 7.566372975210778));
					tempbox.addCircle(Circle(34.5, 9369%64, 7.516648189186454));
					tempbox.addCircle(Circle(40.0, 9387%64, 5.522680508593631));
				}
				if(frame == 147) {
					tempbox.addCircle(Circle(20.5, 9452%64, 5.852349955359813));
					tempbox.addCircle(Circle(28.5, 9445%64, 8.631338250816034));
					tempbox.addCircle(Circle(33.5, 9453%64, 4.6097722286464435));
					tempbox.addCircle(Circle(35.0, 9436%64, 7.566372975210778));
				}
				if(frame == 148) {
					tempbox.addCircle(Circle(21.0, 9516%64, 5.024937810560445));
					tempbox.addCircle(Circle(29.0, 9509%64, 8.631338250816034));
					tempbox.addCircle(Circle(35.0, 9517%64, 5.024937810560445));
					tempbox.addCircle(Circle(36.0, 9500%64, 8.139410298049853));
				}
				if(frame == 149) {
					tempbox.addCircle(Circle(28.0, 9578%64, 8.0156097709407));
					tempbox.addCircle(Circle(36.0, 9565%64, 8.139410298049853));
					tempbox.addCircle(Circle(37.0, 9579%64, 6.0));
				}
				if(frame == 150) {
					tempbox.addCircle(Circle(32.5, 9645%64, 6.264982043070834));
					tempbox.addCircle(Circle(34.5, 9635%64, 8.0156097709407));
					tempbox.addCircle(Circle(41.5, 9628%64, 7.0710678118654755));
				}
